DECLARE @SchemaName sysname, @TableName sysname, @DropFKey VarChar(2048), @AddFKey VarChar(2048)

DECLARE Table_Cursor 
CURSOR
FOR
SELECT	DISTINCT C.TABLE_SCHEMA,C.TABLE_NAME
FROM	INFORMATION_SCHEMA.COLUMNS C
JOIN	INFORMATION_SCHEMA.TABLES T
ON	C.TABLE_CATALOG	= T.TABLE_CATALOG
AND	C.TABLE_SCHEMA	= T.TABLE_SCHEMA
AND	C.TABLE_NAME	= T.TABLE_NAME
WHERE	C.COLUMN_NAME like '%assetid%'
AND	T.TABLE_TYPE = 'BASE TABLE'

OPEN Table_Cursor
FETCH NEXT FROM Table_Cursor INTO @SchemaName,@TableName
WHILE (@@fetch_status <> -1)
BEGIN
	IF (@@fetch_status <> -2)
	BEGIN
		DECLARE DropFkey_Cursor 
		CURSOR
		FOR
		select  'ALTER TABLE ' + QUOTENAME(FK_SCHEMA) + '.' + QUOTENAME(FK_TABLE) +
			' DROP CONSTRAINT '+ QUOTENAME(FK_NAME)
		from 	(
			SELECT	CT1.TABLE_SCHEMA,CT1.TABLE_NAME, CT1.CONSTRAINT_NAME,  CC1.COLUMN_NAME ,CT2.TABLE_SCHEMA ,CT2.TABLE_NAME ,CC2.COLUMN_NAME 
			FROM	INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC
			JOIN	INFORMATION_SCHEMA.TABLE_CONSTRAINTS CT1
			ON	RC.CONSTRAINT_SCHEMA		= CT1.CONSTRAINT_SCHEMA
			AND	RC.CONSTRAINT_NAME		= CT1.CONSTRAINT_NAME
			JOIN	INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC1
			ON	RC.CONSTRAINT_SCHEMA		= CC1.CONSTRAINT_SCHEMA
			AND	RC.CONSTRAINT_NAME		= CC1.CONSTRAINT_NAME
			JOIN	INFORMATION_SCHEMA.TABLE_CONSTRAINTS CT2
			ON	RC.UNIQUE_CONSTRAINT_SCHEMA	= CT2.CONSTRAINT_SCHEMA
			AND	RC.UNIQUE_CONSTRAINT_NAME	= CT2.CONSTRAINT_NAME
			JOIN	INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC2
			ON	RC.UNIQUE_CONSTRAINT_SCHEMA	= CC2.CONSTRAINT_SCHEMA
			AND	RC.UNIQUE_CONSTRAINT_NAME	= CC2.CONSTRAINT_NAME
			WHERE	CT1.CONSTRAINT_TYPE	= 'FOREIGN KEY'
			AND	CT2.TABLE_SCHEMA	= @SchemaName
			AND	CT2.TABLE_NAME		= @TableName
			)FKEYS (FK_SCHEMA,FK_TABLE,FK_NAME,FK_COLUMN,PRI_SCHEMA,PRI_TABLE,PRI_COLUMN)

		OPEN DropFkey_Cursor
		FETCH NEXT FROM DropFkey_Cursor INTO @DropFKey
		WHILE (@@fetch_status <> -1)
		BEGIN
			IF (@@fetch_status <> -2)
			BEGIN
				PRINT @DropFKey
				PRINT 'GO'
			END
			FETCH NEXT FROM DropFkey_Cursor INTO @DropFKey
		END

		CLOSE DropFkey_Cursor
		DEALLOCATE DropFkey_Cursor

		PRINT 'ALTER TABLE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName) + ' NOCHECK CONSTRAINT ALL'
		PRINT 'GO'
		PRINT 'Truncate Table ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName)
		PRINT 'GO'
		PRINT 'ALTER TABLE ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName) + ' WITH CHECK CHECK CONSTRAINT ALL'
		PRINT 'GO'

		DECLARE AddFkey_Cursor 
		CURSOR
		FOR
		select  'ALTER TABLE ' + QUOTENAME(FK_SCHEMA) + '.' + QUOTENAME(FK_TABLE) +
			' ADD CONSTRAINT '+ QUOTENAME(FK_NAME) +
			' FOREIGN KEY (' + QUOTENAME(FK_COLUMN) + ') REFERENCES ' +
			QUOTENAME(PRI_SCHEMA) + '.' + QUOTENAME(PRI_TABLE) +
			' (' + QUOTENAME(PRI_COLUMN) + ')'
		from 	(
			SELECT	CT1.TABLE_SCHEMA,CT1.TABLE_NAME, CT1.CONSTRAINT_NAME,  CC1.COLUMN_NAME ,CT2.TABLE_SCHEMA ,CT2.TABLE_NAME ,CC2.COLUMN_NAME 
			FROM	INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC
			JOIN	INFORMATION_SCHEMA.TABLE_CONSTRAINTS CT1
			ON	RC.CONSTRAINT_SCHEMA		= CT1.CONSTRAINT_SCHEMA
			AND	RC.CONSTRAINT_NAME		= CT1.CONSTRAINT_NAME
			JOIN	INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC1
			ON	RC.CONSTRAINT_SCHEMA		= CC1.CONSTRAINT_SCHEMA
			AND	RC.CONSTRAINT_NAME		= CC1.CONSTRAINT_NAME
			JOIN	INFORMATION_SCHEMA.TABLE_CONSTRAINTS CT2
			ON	RC.UNIQUE_CONSTRAINT_SCHEMA	= CT2.CONSTRAINT_SCHEMA
			AND	RC.UNIQUE_CONSTRAINT_NAME	= CT2.CONSTRAINT_NAME
			JOIN	INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC2
			ON	RC.UNIQUE_CONSTRAINT_SCHEMA	= CC2.CONSTRAINT_SCHEMA
			AND	RC.UNIQUE_CONSTRAINT_NAME	= CC2.CONSTRAINT_NAME
			WHERE	CT1.CONSTRAINT_TYPE	= 'FOREIGN KEY'
			AND	CT2.TABLE_SCHEMA	= @SchemaName
			AND	CT2.TABLE_NAME		= @TableName
			)FKEYS (FK_SCHEMA,FK_TABLE,FK_NAME,FK_COLUMN,PRI_SCHEMA,PRI_TABLE,PRI_COLUMN)

		OPEN AddFkey_Cursor
		FETCH NEXT FROM AddFkey_Cursor INTO @AddFKey
		WHILE (@@fetch_status <> -1)
		BEGIN
			IF (@@fetch_status <> -2)
			BEGIN
				PRINT @AddFKey
				PRINT 'GO'
			END
			FETCH NEXT FROM AddFkey_Cursor INTO @AddFKey
		END

		CLOSE AddFkey_Cursor
		DEALLOCATE AddFkey_Cursor

	END
	FETCH NEXT FROM Table_Cursor INTO @SchemaName,@TableName
END

CLOSE Table_Cursor
DEALLOCATE Table_Cursor



























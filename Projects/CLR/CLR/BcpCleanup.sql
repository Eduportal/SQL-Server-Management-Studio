if not exists (select * from sysobjects           where  id = object_id('Bcp.Cleanup')           and    objectproperty(id,'IsProcedure') = 1)   exec ('create procedure Bcp.Cleanup as return')goSET ANSI_NULLS ONGOSET QUOTED_IDENTIFIER ONGO-- =============================================-- Author:		D. Nambi-- =============================================ALTER PROCEDURE [Bcp].[Cleanup]	 @IncludeSpids bit=null	,@IncludeProcesses bit=null	,@ProcessGUID uniqueidentifier=nullAS/*<DbDoc>	<object		description="Cleanup data to a given file location."		>		<parameters>			<parameter name="@IncludeSpids" description="" />			<parameter name="@IncludeProcesses" description="" />			<parameter name="@ProcessGUID" description="What is the ProcessGUID of the method that is calling this sproc? Defaults to newid()"/>		</parameters>	</object></DbDoc>*/BEGIN	set nocount on;	DECLARE  @EDef xml			,@ETypeKeyword varchar(32)			,@EMsg nvarchar(max)	SET @ProcessGUID=coalesce(@ProcessGUID, newid());	SET @IncludeSpids=coalesce(@IncludeSpids,1);	SET @IncludeProcesses=coalesce(@IncludeProcesses,0);	SET @EDef=(			select				 @IncludeProcesses as [@include-processes]				,@IncludeSpids as [@include-spids]			for xml path ('parameter')			)		exec Evt.MessageHandle		@MessageSpaceKeyword='EVT_BCP'		,@MessageKeyword='EVT_CLEANUP'		,@TypeKeyword='EVT_START'		,@ModuleName='Bcp.Cleanup'		,@ProcessGUID=@ProcessGUID		,@AdHocDefinition=@EDef	BEGIN TRY			if @IncludeProcesses=1		begin			EXEC [Bcp].[ClrCleanup]			@ProcessGUID=@ProcessGUID		end			SET @ETypeKeyword='EVT_SUCCESS'		SET @EMsg='Bcp.Cleanup operation successful'	END TRY	BEGIN CATCH		set @ETypeKeyword='EVT_FAIL'		set @EMsg=N'try/catch error'			+N':message='+error_message()			+case when error_procedure() is null then N'' else N':procedure='+error_procedure() end			+case when error_number() is null then N'' else N':error number='+cast(error_number() as nvarchar) end			+case when error_line() is null then N'' else N':line number='+cast(error_line() as nvarchar) end	END CATCH		exec Evt.MessageHandle	@MessageSpaceKeyword='EVT_BCP'	,@MessageKeyword='EVT_CLEANUP'	,@TypeKeyword=@ETypeKeyword	,@ModuleName='Bcp.Cleanup'	,@ProcessGUID=@ProcessGUID	,@AdHocDefinition=@EDef	,@AdHocMsg=@EMsgENDgoexec DbDoc.ObjectParse @ObjectName=Cleanup, @SchemaName=Bcpgo